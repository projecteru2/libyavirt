syntax = "proto3";

option go_package = "grpc/gen;yavpb";

service YavirtdRPC {
  rpc Ping(Empty) returns (PingMessage) {};
  rpc GetInfo(Empty) returns (InfoMessage) {};
  rpc GetGuest(GetGuestOptions) returns (GetGuestMessage) {};
  rpc GetGuestUUID(GetGuestOptions) returns (GetGuestUUIDMessage) {};
  rpc GetGuestIDList(GetGuestIDListOptions) returns (GetGuestIDListMessage) {};
  rpc CreateGuest(CreateGuestOptions) returns (CreateGuestMessage) {};
  rpc ControlGuest(ControlGuestOptions) returns (ControlGuestMessage) {};
  rpc AttachGuest(stream AttachGuestOptions) returns (stream AttachGuestMessage) {};
  rpc ResizeConsoleWindow(ResizeWindowOptions) returns (Empty) {};
  rpc ExecuteGuest(ExecuteGuestOptions) returns (ExecuteGuestMessage) {};
  rpc ExecExitCode(ExecExitCodeOptions) returns (ExecExitCodeMessage) {};
  rpc ResizeGuest(ResizeGuestOptions) returns (ControlGuestMessage) {};
  rpc CaptureGuest(CaptureGuestOptions) returns (UserImageMessage) {};
  rpc ConnectNetwork(ConnectNetworkOptions) returns (ConnectNetworkMessage) {};
  rpc DisconnectNetwork(DisconnectNetworkOptions) returns (DisconnectNetworkMessage) {};
  rpc Cat(CatOptions) returns (stream CatMessage) {};
  rpc CopyToGuest(stream CopyOptions) returns (CopyMessage) {};
  rpc Events(EventsOptions) returns (stream EventMessage) {};
  rpc WaitGuest(WaitGuestOptions) returns (WaitGuestMessage) {};
  rpc NetworkList(NetworkListOptions) returns (NetworkListMessage) {};
  rpc Log(LogOptions) returns(stream LogMessage) {};
  rpc ListSnapshot(ListSnapshotOptions) returns (ListSnapshotMessage) {};
  rpc CreateSnapshot(CreateSnapshotOptions) returns (CreateSnapshotMessage) {};
  rpc CommitSnapshot(CommitSnapshotOptions) returns (CommitSnapshotMessage) {};
  rpc RestoreSnapshot(RestoreSnapshotOptions) returns (RestoreSnapshotMessage) {};
  rpc PushImage(PushImageOptions) returns (PushImageMessage) {};
  rpc RemoveImage(RemoveImageOptions) returns (RemoveImageMessage);
  rpc ListImage(ListImageOptions) returns (ListImageMessage);
  rpc PullImage(PullImageOptions) returns (PullImageMessage);
  rpc DigestImage(DigestImageOptions) returns (DigestImageMessage);
}

message Empty {}

message PullImageOptions{
  string name = 1;
  bool all = 2;
}

message PullImageMessage{
  string result = 1;
}

message ListImageOptions{
  string filter = 1;
}

message ImageItem{
  string name = 1;
  string user = 2;
  string distro = 3;
  string id = 4;
  string type = 5;
}

message ListImageMessage{
  repeated ImageItem images = 1;
}

message RemoveImageOptions{
  string image = 1;
  string user = 2;
  bool force = 3;
  bool prune = 4;
}

message RemoveImageMessage{
  repeated string removed = 1;
}

message PushImageOptions{
  string img_name = 1;
  string user = 2;
}

message PushImageMessage{
  string  err = 1;
}

message NetworkListOptions{
  repeated string drivers = 1;
}

message NetworkListMessage{
  map<string, bytes> networks = 1;
}

message WaitGuestOptions{
  string id = 1;
}

message WaitGuestMessage{
  string msg = 1;
  int64 code = 2;
}

message CopyOptions{
  string id = 1;
  string dest = 2;
  bytes content = 3;
  bool override = 4;
  int64 size = 5;
}

message CopyMessage{
  string msg = 1;
  bool failed = 2;
}

message CatOptions {
  string id = 1;
  string path = 2;
}

message CatMessage {
  bytes data = 1;
}

message DisconnectNetworkOptions {
  string id = 1;
  string network = 2;
}

message ConnectNetworkOptions {
  string id = 1;
  string network = 2;
  string ipv4 = 3;
  string ipv6 = 4;
}

message CaptureGuestOptions {
  string id = 1;
  string name = 2;
  string user = 3;
  bool overridden = 4;
}

message UserImageMessage {
  string id = 1;
  string name = 2;
  string distro = 3;
  int64 latest_version = 4;
  int64 size = 5;
}

message PingMessage {
  string version = 1;
}

message InfoMessage {
  string id = 1;
  int64 cpu = 2;
  int64 memory = 3;
  int64 storage = 4;
  map<string, bytes> resources = 5;
}

message GetGuestOptions {
  string id = 1;
}

message GetGuestMessage {
  string id = 1;
  string status = 2;
  string transit_status = 3;
  int64 create_time = 4;
  int64 transit_time = 5;
  int64 update_time = 6;
  int64 cpu = 7;
  int64 memory = 8;
  int64 storage = 9;
  int64 image_id = 10;
  string image_name = 11;
  map<string, string> networks = 12;
  map<string, string> labels = 13;
  repeated string ips = 14;
  string hostname = 15;
  bool running = 16;
}

message GetGuestIDListOptions {
  map<string, string> filters = 1;
}

message GetGuestIDListMessage {
  repeated string ids = 1;
}

message GetGuestUUIDMessage {
  string uuid = 1;
}

message CreateGuestOptions {
  int64 cpu = 1;
  int64 memory = 2;
  string image_name = 3;
  repeated Volume volumes = 4;
  string dmi_uuid = 5;
  map<string, string> labels = 6;
  string ancestor_id = 7;
  string image_user = 8;
  repeated string cmd = 9;
  bool lambda = 10;
  bool stdin = 11;
  map<string, bytes> resources = 12;
}

message ResizeGuestOptions {
  string id = 1;
  int64 cpu = 2;
  int64 memory = 3;
  repeated Volume volumes = 4;
  map<string, bytes> resources = 12;
}

message Volume {
  string mount = 1;
  int64 capacity = 2;
  string io = 3;
}

message CreateGuestMessage {
  string id = 1;
  string status = 2;
  string transit_status = 3;
  int64 create_time = 4;
  int64 transit_time = 5;
  int64 update_time = 6;
  int64 cpu = 7;
  int64 memory = 8;
  int64 storage = 9;
  int64 image_id = 10;
  string image_name = 11;
  map<string, string> networks = 12;
  string image_user = 13;
  map<string, string> labels = 14;
}

message ControlGuestOptions {
  string id = 1;
  string operation = 2;
  bool force = 3;
}

message ControlGuestMessage {
  string msg = 1;
}

message AttachGuestOptions {
  string id = 1;
  bytes repl_cmd = 2;
  bool force = 3;
  bool safe = 4;
  repeated string commands = 5;
}

message AttachGuestMessage {
  string id = 1;
  bytes data = 2;
}

message ResizeWindowOptions {
  string id = 1;
  int64 height = 2;
  int64 width = 3;
}

message ExecuteGuestOptions {
  string id = 1;
  repeated string commands = 2;
}

message ExecuteGuestMessage {
  int64 pid = 1;
  bytes data = 2;
  int64 exit_code = 3;
}

message ExecExitCodeOptions{
  string id = 1;
  int64 pid = 2;
}

message ExecExitCodeMessage{
  int64 exit_code = 1;
}

message ConnectNetworkMessage {
  string cidr = 1;
}

message DisconnectNetworkMessage {
  string msg = 1;
}

message EventsOptions {
  map<string, string> filters = 1;
}

message EventMessage {
  string id = 1;
  string type = 2;
  string action = 3;
  int64 time_nano = 4;
}

message LogOptions{
  string id = 1;
  int64 n = 2;
}

message LogMessage{
  bytes data = 1;
}

message ListSnapshotOptions {
  string id = 1;
  string vol_id = 2;
}

message ListSnapshotMessageItem{
  string vol_id = 1;
  string vol_mount_dir = 2;
  string snap_id = 3;
  int64 created_time = 4;
}

message ListSnapshotMessage{
  repeated ListSnapshotMessageItem snapshots = 1;
}

message CreateSnapshotOptions {
  string id = 1;
  string vol_id = 2;
}

message CreateSnapshotMessage {
  string msg = 1;
}

message CommitSnapshotOptions {
  string id = 1;
  string vol_id = 2;
  string snap_id = 3;
}

message CommitSnapshotMessage {
  string msg = 1;
}

message RestoreSnapshotOptions {
  string id = 1;
  string vol_id = 2;
  string snap_id = 3;
}

message RestoreSnapshotMessage {
  string msg = 1;
}

message DigestImageOptions{
  bool local = 1;
  string image_name = 2;
}

message DigestImageMessage{
  repeated string digests = 1;
}
